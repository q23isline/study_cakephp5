# <https://learn.microsoft.com/ja-jp/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-8.0&tabs=linux-ubuntu>
# HTTP から HTTPS へのリダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name localhost;

    root /var/www/localhost/publish/webroot;
    index index.php;

    access_log /var/www/localhost/log/nginx-access.log;
    error_log /var/www/localhost/log/nginx-error.log;

    # NGINX のバージョンを返さない
    server_tokens off;

    # XSS 対策
    # <https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Content-Security-Policy>
    add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self' https://cdn.jsdelivr.net; img-src 'self' data:; connect-src 'self'; font-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    # MIME タイプのスニッフィングを抑止
    # <https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/X-Content-Type-Options>
    add_header X-Content-Type-Options nosniff always;
    # リファラーを送信しない（本サイトから外部サイトへアクセスしたという情報は渡さない）
    # <https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Referrer-Policy>
    add_header Referrer-Policy no-referrer always;
    # ブラウザの機能の利用を制限（位置情報、マイク、カメラは許可しない）
    # <https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Permissions-Policy>
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    # サポートする TLS プロトコルのバージョンを指定
    ssl_protocols TLSv1.2 TLSv1.3;
    # 暗号化アルゴリズム（暗号スイート）の選択権をクライアントではなくサーバー側に持たせる
    ssl_prefer_server_ciphers on;
    # 使用する暗号スイートを指定
    ssl_ciphers HIGH:!aNULL:!MD5;
    # SSL セッションキャッシュを 10MB （約 4,000 件）に設定
    ssl_session_cache shared:SSL:10m;
    # SSL セッションの有効期間を 1日に指定
    ssl_session_timeout 1d;

    # HSTS（ 1年間 HTTPS 接続をブラウザに強制する）
    # <https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Strict-Transport-Security>
    # ローカル環境で max-age=31536000 にすると他の PJ のローカル環境も HTTPS アクセスするようになってしまうので、0 を指定する
    add_header Strict-Transport-Security "max-age=0; includeSubDomains" always;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;
        fastcgi_intercept_errors on;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
